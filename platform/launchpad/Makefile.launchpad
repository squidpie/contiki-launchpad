
# at present, this file contains a whole lot of old Sky legacy. Clean up.

# set mcu
ifndef MCU
MCU=msp430g2553
#MCU=msp430g2452
endif

# we need to make a 'small' compile, ie removes unused sections etc
SMALL=1

# we are not using uIP here, target is too small
CFLAGS += -DWITH_UIP6=0

# output is intel hex format so it can be uploaded to target with mspdebug
CFLAGS += -Wl,--oihex

# remove these too when running 'make clean'
CLEAN += *.launchpad symbols.c symbols.h

# Core arch sources
ARCH_SOURCES+=  spi.c                                         \
                i2c.c                                         \
                uart0-putchar.c                               \
                uart0.c                                       \
                adc.c                                         \
                pwm.c                                         \
                button.c

# device drivers (optional)
DEV_SOURCES+=   alphanumeric.c                                \
                servo.c                                       \
                hpdl1414.c                                    \
                en25qxx.c
#                logging.c                                     \


CONTIKI_TARGET_SOURCEFILES+=$(ARCH_SOURCES) $(RADIO_SOURCES) $(DEV_SOURCES)

# include these target folders
CONTIKI_TARGET_DIRS = . dev

# this is the main file that contains the 'main' function and the event loop
ifndef CONTIKI_TARGET_MAIN
CONTIKI_TARGET_MAIN = contiki-launchpad-main.c
endif

# include mcu-related files and build flags etc
include $(CONTIKI)/cpu/msp430/g2xxx/Makefile.msp430
# this one was the original line, using the original msp430 Makefile. No particular
# change in size in any way so check if it works, otherwise change back!
#include $(CONTIKI)/cpu/msp430/Makefile.msp430

contiki-$(TARGET).a: ${addprefix $(OBJECTDIR)/,symbols.o}
#	$(AR) rcf $@ $^

#IHEXFILE=tmpimage.ihex

# Check what operating system we are using as it affects what commands we run
ifeq ($(HOST_OS),Windows)
# Windows?
  USBDEVPREFIX=/dev/com
  SERIALDUMP = $(CONTIKI)/tools/sky/serialdump-windows
else
# OSX/Mac?
ifeq ($(HOST_OS),Darwin)
  ifndef MOTELIST
    USBDEVPREFIX=
    SERIALDUMP = $(CONTIKI)/tools/sky/serialdump-macos
  endif
else
  # Else we assume Linux.
  ifndef MOTELIST
    USBDEVPREFIX=
    SERIALDUMP = $(CONTIKI)/tools/sky/serialdump-linux
  endif
endif
endif

# upload to the Launchpad
%.upload: %.ihex
	@echo "Programming Launchpad with $<"
	mspdebug rf2500 "prog $<"

# full (except Info segments) chip erase
.PHONY: erase
erase:
	mspdebug rf2500 "erase"

# open a serial connection to Launchpad
login:
	$(SERIALDUMP) -b115200 $(USBDEVPREFIX)$(firstword $(CMOTES))

# as 'login' but with timestamps
serialdump:
	$(SERIALDUMP) -b115200 $(USBDEVPREFIX)$(firstword $(CMOTES)) | $(CONTIKI)/tools/timestamp | tee serialdump-`date +%Y%m%d-%H%M`

# print out some helpful messages
help:
	@echo ""
	@echo "*** Contiki for TI Launchpad ***"
	@echo "***   Some useful commands   ***"
	@echo ""
	@echo "Save target"
	@echo "   make TARGET=launchpad savetarget"
	@echo "Compile a project"
	@echo "   make all"
	@echo "Clean up any compiled object files, target files etc"
	@echo "   make clean"
	@echo "Compile and program a Launchpad with project 'blink'"
	@echo "   make blink.upload"
	@echo "Perform a full (except Info segments) chip erase"
	@echo "   make erase"
	@echo "Open a serial connection - ie see printf output and send to the LP"
	@echo "   make login"
	@echo ""
	@echo "For more information, and to see how to use drivers and peripherals,"
	@echo "eg button, LEDs, see the folders in examples/launchpad and the files"
	@echo "in platform/launchpad and cpu/msp430/g2xxxx."
	@echo ""






# legacy 'sky' stuff; we likely won't run uip on these-----------------------------
winslip:
ifdef INTERFACE
	$(CONTIKI)/tools/wpcapslip/wpcapslip -s $(USBDEVPREFIX)$(firstword $(CMOTES)) $(INTERFACE) 172.16.0.0 255.255.0.0
else
	@echo "Usage: \"$(MAKE) $@ INTERFACE=<the IP address of a local network interface>\""
	@echo "Use the \"ipconfig\" command to find out the IP addresses of the local interfaces"
endif

linslip: $(CONTIKI)/tools/tunslip
	$(CONTIKI)/tools/tunslip -s $(USBDEVPREFIX)$(firstword $(CMOTES)) 172.16.0.0 255.255.0.0

$(CONTIKI)/tools/tunslip:
	(cd $(CONTIKI)/tools; $(MAKE) tunslip)

